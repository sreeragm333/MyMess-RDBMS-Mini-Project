{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sephi\\\\Desktop\\\\IT\\\\project\\\\project-s4-frontend\\\\src\\\\Components\\\\Messcut.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Messcut.css';\nimport Axios from 'axios';\nimport { format, differenceInDays } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Messcut = _ref => {\n  _s();\n  let {\n    loginStatus\n  } = _ref;\n  const [first, setFirst] = useState(null);\n  const [last, setLast] = useState(null);\n  const handleFirstDateChange = event => {\n    // Update the first picked date\n    setFirst(new Date(event.target.value));\n  };\n  const handleLastDateChange = event => {\n    // Update the second picked date\n    setLast(new Date(event.target.value));\n  };\n  const handleSubmit = async () => {\n    if (first && last) {\n      // Calculate the number of days between the selected dates\n      const daysInBetween = differenceInDays(last, first) + 1;\n\n      // Format the selected dates for logging\n      const formattedFirstDate = format(first, 'yyyy-MM-dd');\n      const formattedLastDate = format(last, 'yyyy-MM-dd');\n      Axios.post('http://localhost:8800/messcut', {\n        sid: loginStatus.studentid,\n        start: formattedFirstDate,\n        end: formattedLastDate,\n        nod: daysInBetween\n      }).then(response => {\n        if (response) {\n          alert(\"Messcut Successfull!\");\n        }\n      });\n\n      // Clear the selected dates after successful submission\n      clearSelection();\n    }\n  };\n  const clearSelection = () => {\n    setFirst(null);\n    setLast(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messCutContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messCutHeading\",\n      children: \"Mess cuts can be taken for a minimum of three days.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messCutInputDiv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messCutSubmitDiv\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Messcut, \"Yranjor/G5+qLpW7YX4hCsRKXWA=\");\n_c = Messcut;\nexport default Messcut;\nvar _c;\n$RefreshReg$(_c, \"Messcut\");","map":{"version":3,"names":["React","useState","Axios","format","differenceInDays","jsxDEV","_jsxDEV","Messcut","_ref","_s","loginStatus","first","setFirst","last","setLast","handleFirstDateChange","event","Date","target","value","handleLastDateChange","handleSubmit","daysInBetween","formattedFirstDate","formattedLastDate","post","sid","studentid","start","end","nod","then","response","alert","clearSelection","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sephi/Desktop/IT/project/project-s4-frontend/src/Components/Messcut.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Messcut.css';\r\nimport Axios from 'axios';\r\nimport { format, differenceInDays } from 'date-fns';\r\n\r\nconst Messcut = ({ loginStatus }) => {\r\n  const [first, setFirst] = useState(null);\r\n  const [last, setLast] = useState(null);\r\n\r\n  const handleFirstDateChange = (event) => {\r\n    // Update the first picked date\r\n    setFirst(new Date(event.target.value));\r\n  };\r\n\r\n  const handleLastDateChange = (event) => {\r\n    // Update the second picked date\r\n    setLast(new Date(event.target.value));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (first && last) {\r\n      // Calculate the number of days between the selected dates\r\n      const daysInBetween = differenceInDays(last, first) + 1;\r\n\r\n      // Format the selected dates for logging\r\n      const formattedFirstDate = format(first, 'yyyy-MM-dd');\r\n      const formattedLastDate = format(last, 'yyyy-MM-dd');\r\n\r\n      Axios.post('http://localhost:8800/messcut',{\r\n        sid: loginStatus.studentid,\r\n        start:formattedFirstDate,\r\n        end:formattedLastDate,\r\n        nod:daysInBetween\r\n      }).then((response)=>{\r\n        if(response)\r\n        {\r\n          alert(\"Messcut Successfull!\");\r\n        }\r\n      })\r\n\r\n      // Clear the selected dates after successful submission\r\n      clearSelection();\r\n    }\r\n  };\r\n\r\n  const clearSelection = () => {\r\n    setFirst(null);\r\n    setLast(null);\r\n  };\r\n\r\n  return (\r\n    <div className='messCutContainer'>\r\n      <div className='messCutHeading'>\r\n        Mess cuts can be taken for a minimum of three days.\r\n      </div>\r\n      <div className='messCutInputDiv'>\r\n\r\n      </div>\r\n      <div className='messCutSubmitDiv'>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messcut;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,eAAe;AACtB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,gBAAgB,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,OAAO,GAAGC,IAAA,IAAqB;EAAAC,EAAA;EAAA,IAApB;IAAEC;EAAY,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMc,qBAAqB,GAAIC,KAAK,IAAK;IACvC;IACAJ,QAAQ,CAAC,IAAIK,IAAI,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;EACxC,CAAC;EAED,MAAMC,oBAAoB,GAAIJ,KAAK,IAAK;IACtC;IACAF,OAAO,CAAC,IAAIG,IAAI,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;EACvC,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIV,KAAK,IAAIE,IAAI,EAAE;MACjB;MACA,MAAMS,aAAa,GAAGlB,gBAAgB,CAACS,IAAI,EAAEF,KAAK,CAAC,GAAG,CAAC;;MAEvD;MACA,MAAMY,kBAAkB,GAAGpB,MAAM,CAACQ,KAAK,EAAE,YAAY,CAAC;MACtD,MAAMa,iBAAiB,GAAGrB,MAAM,CAACU,IAAI,EAAE,YAAY,CAAC;MAEpDX,KAAK,CAACuB,IAAI,CAAC,+BAA+B,EAAC;QACzCC,GAAG,EAAEhB,WAAW,CAACiB,SAAS;QAC1BC,KAAK,EAACL,kBAAkB;QACxBM,GAAG,EAACL,iBAAiB;QACrBM,GAAG,EAACR;MACN,CAAC,CAAC,CAACS,IAAI,CAAEC,QAAQ,IAAG;QAClB,IAAGA,QAAQ,EACX;UACEC,KAAK,CAAC,sBAAsB,CAAC;QAC/B;MACF,CAAC,CAAC;;MAEF;MACAC,cAAc,CAAC,CAAC;IAClB;EACF,CAAC;EAED,MAAMA,cAAc,GAAGA,CAAA,KAAM;IAC3BtB,QAAQ,CAAC,IAAI,CAAC;IACdE,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBACER,OAAA;IAAK6B,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/B9B,OAAA;MAAK6B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAEhC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNlC,OAAA;MAAK6B,SAAS,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE3B,CAAC,eACNlC,OAAA;MAAK6B,SAAS,EAAC;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA1DIF,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AA4Db,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}